{"version":3,"sources":["components/Blog.js","components/BlogForm.js","components/Message.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","updateBlogLike","removeBlog","userId","useState","visible","setVisible","showWhenVisible","display","hideWhenVisible","buttonMargin","margin","style","border","borderWidth","padding","title","author","onClick","url","likes","user","username","id","BlogForm","addBlog","setTitle","setAuthor","setUrl","toggleVisibility","handleBlog","event","a","preventDefault","onSubmit","name","type","value","onChange","target","Message","message","messageStyle","color","fontSize","token","setToken","newToken","getAll","axios","get","then","response","data","post","content","config","headers","Authorization","put","remove","delete","login","credentials","App","blogs","setBlogs","setUsername","password","setPassword","setUser","setMessage","sortedBlogs","sort","b","useEffect","blogService","loggedUser","window","localStorage","getItem","JSON","parse","handleLogout","removeItem","messageWith","setTimeout","handleLogin","loginService","setItem","stringify","createBlog","blogObject","concat","oldBlog","find","changedBlog","map","confirm","filter","includes","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f5d4cf4.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Blog = ({ blog, updateBlogLike, removeBlog, userId }) => {\r\n  const [visible, setVisible] = useState(false)\r\n  const showWhenVisible = { display: visible ? '' : 'none' }\r\n  const hideWhenVisible = { display: visible ? 'none' : '' }\r\n\r\n  const toggleVisibility = () => {\r\n    setVisible(!visible)\r\n  }\r\n\r\n  const incrementLike = () => {\r\n    updateBlogLike(blog)\r\n  }\r\n\r\n  const remove = () => {\r\n    removeBlog(blog)\r\n  }\r\n\r\n  const blogStyle = {\r\n    border: 'solid',\r\n    borderWidth: 'thin',\r\n    padding: 4,\r\n    margin: 4,\r\n  }\r\n\r\n  const buttonMargin = {\r\n    margin: 4\r\n  }\r\n\r\n  return (\r\n    <div style={blogStyle}>\r\n      <div>\r\n        {blog.title} by {blog.author}\r\n        <button style={buttonMargin} onClick={toggleVisibility}>\r\n          <span style={showWhenVisible}> hide </span>\r\n          <span style={hideWhenVisible}> show </span>\r\n        </button>\r\n      </div>\r\n\r\n      <div style={showWhenVisible}>\r\n        <div>\r\n          {blog.url}\r\n        </div>\r\n        <div>\r\n          likes: {blog.likes}\r\n          <button style={buttonMargin} onClick={incrementLike}> like </button>\r\n        </div>\r\n        <div>\r\n          added by: {blog.user.username}\r\n        </div>\r\n        {userId === blog.user.id && <button onClick={remove}> remove </button>}\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nBlog.propTypes = {\r\n  walp: PropTypes.string.isRequired,\r\n  blog: PropTypes.string.isRequired,\r\n  updateBlogLike: PropTypes.func.isRequired,\r\n  removeBlog: PropTypes.func.isRequired, \r\n  userId: PropTypes.number.isRequired\r\n}\r\n\r\nexport default Blog","import React, { useState } from 'react'\n\nconst BlogForm = ({ addBlog }) => {\n    const [title, setTitle] = useState('')\n    const [author, setAuthor] = useState('')\n    const [url, setUrl] = useState('')\n    const [visible, setVisible] = useState(false)\n\n    const hideWhenVisible = { display: visible ? 'none' : '' }\n    const showWhenVisible = { display: visible ? '' : 'none' }\n\n    const toggleVisibility = () => {\n        setVisible(!visible)\n    }\n\n    const setEmptyValues = () => {\n        setVisible(false)\n        setTitle('')\n        setAuthor('')\n        setUrl('')\n    }\n\n    const handleBlog = async (event) => {\n        event.preventDefault()\n        const blogObject = {\n            title: title,\n            author: author,\n            url: url\n        }\n        addBlog(blogObject)\n        setEmptyValues()\n    }\n\n    return (\n        <div>\n            <div style={hideWhenVisible}>\n                <button onClick={toggleVisibility}>new note</button>\n            </div>\n            <div style={showWhenVisible}>\n                <form onSubmit={handleBlog}>\n                    <h2>create new</h2>\n                    <div> title: <input name=\"title\" type=\"text\" value={title}\n                        onChange={({ target }) => setTitle(target.value)} />\n                    </div>\n                    <div> author: <input name=\"author\" type=\"text\" value={author}\n                        onChange={({ target }) => setAuthor(target.value)} />\n                    </div>\n                    <div> url: <input name=\"url\" type=\"text\" value={url}\n                        onChange={({ target }) => setUrl(target.value)} />\n                    </div>\n                    <button type=\"submit\"> create new blog </button>\n                </form>\n                <button onClick={toggleVisibility}>cancel</button>\n            </div>\n        </div >\n    )\n}\n\nexport default BlogForm","import React from 'react'\n\nconst Message = ({ message }) => {\n    if (!message) {\n        return null\n    }\n\n    const succesfull = {color:'green', fontSize:20}\n    const unsuccesfull = {color:'red', fontSize:20}\n    const messageStyle = message.type === 'error' ? unsuccesfull : succesfull\n\n    return (\n        <div style={messageStyle}>\n            <p> {message.message} </p>\n        </div>\n    )\n}\n\nexport default Message","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst post = async content => {\n  const config = { headers: { Authorization: token } }\n  const response = await axios.post(baseUrl, content, config)\n  return response.data\n}\n\nconst put = async blog => {\n  const response = await axios.put(`${baseUrl}/${blog.id}`, blog)\n  return response.data\n}\n\nconst remove = async id => {\n  const config = { headers: { Authorization: token } }\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { setToken, getAll, post, put, remove }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport BlogForm from './components/BlogForm'\nimport Message from './components/Message'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [message, setMessage] = useState(null)\n\n  const sortedBlogs = blogs.sort(function (a, b) {\n    return b.likes - a.likes\n  })\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs(blogs)\n    )\n  }, [])\n\n  useEffect(() => {\n    const loggedUser = window.localStorage.getItem('loggedUser')\n    if (loggedUser) {\n      const user = JSON.parse(loggedUser)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogout = () => {\n    setUser(null)\n    window.localStorage.removeItem('loggedUser')\n  }\n\n  const messageWith = (message, type = 'success') => {\n    setMessage({ message, type })\n    setTimeout(() => {\n      setMessage(null)\n    }, 4000)\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({ username, password })\n      window.localStorage.setItem('loggedUser', JSON.stringify(user))\n      setUser(user)\n      setUsername('')\n      setPassword('')\n      blogService.setToken(user.token)\n    } catch (exception) {\n      messageWith('wrong username or password', 'error')\n    }\n  }\n\n  const createBlog = async (blogObject) => {\n    try {\n      const blog = await blogService.post(blogObject)\n      setBlogs(blogs.concat(blog))\n      messageWith(`${blogObject.title} added succesfully`)\n    } catch (exception) {\n      messageWith('required information missing', 'error')\n    }\n  }\n\n  const updateBlogLike = async (blog) => {\n    try {\n      const oldBlog = blogs.find(b => b.id === blog.id)\n      const changedBlog = { ...oldBlog, likes: oldBlog.likes + 1 }\n      await blogService.put(changedBlog)\n      setBlogs(blogs.map(b => b.id === blog.id ? changedBlog : b))\n    } catch (exception) {\n      messageWith('something went wrong when updating blog', 'error')\n    }\n  }\n\n  const removeBlog = async (blog) => {\n    const confirm = window.confirm(`remove ${blog.title} by ${blog.author}?`)\n    if (confirm) {\n      try {\n        await blogService.remove(blog.id)\n        setBlogs(blogs.filter(b => b !== blog))\n      } catch (exception) {\n        if (exception.message.includes('403')) {\n          messageWith('You are not authorized to remove this blog', 'error')\n        } else {\n          messageWith('something went wrong when removing blog', 'error')\n        }\n      }\n    }\n  }\n\n  const loginForm = () => (\n    <form onSubmit={handleLogin}>\n      <div>\n        <h2>log in to application</h2>\n        <div> username <input name=\"username\" type=\"text\" value={username}\n          onChange={({ target }) => setUsername(target.value)} />\n        </div>\n        <div> password <input name=\"password\" type=\"password\" value={password}\n          onChange={({ target }) => setPassword(target.value)} />\n        </div>\n        <button type=\"submit\"> login </button>\n      </div>\n    </form>\n  )\n\n  const showBlogs = () => (\n    <div>\n      <h2>blogs</h2>\n      <p>{user.name} logged in <button onClick={handleLogout}> logout </button> </p>\n      {sortedBlogs.map(blog =>\n        <Blog key={blog.id} blog={blog} updateBlogLike={updateBlogLike} removeBlog={removeBlog}\n          userId={user.id} />\n      )}\n    </div>\n  )\n\n  return (\n    <div>\n      <Message message={message} />\n      {user === null ? loginForm() : showBlogs()}\n      {user !== null && <BlogForm addBlog={createBlog} />}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}