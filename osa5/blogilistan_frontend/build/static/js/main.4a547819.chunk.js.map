{"version":3,"sources":["components/Blog.js","components/Message.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","title","author","Message","message","console","log","type","messageStyle","color","fontSize","style","token","setToken","newToken","getAll","axios","get","then","response","data","post","content","a","config","headers","Authorization","login","credentials","App","useState","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","setTitle","setAuthor","url","setUrl","setMessage","useEffect","blogService","loggedUser","window","localStorage","getItem","JSON","parse","handleLogout","removeItem","messageWith","setTimeout","handleLogin","event","preventDefault","loginService","setItem","stringify","handleBlog","blogObject","concat","onSubmit","name","value","onChange","target","onClick","map","key","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a547819.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Blog = ({ blog }) => (\r\n  <div>\r\n    {blog.title} {blog.author}\r\n  </div>\r\n)\r\n\r\nexport default Blog","import React from 'react'\n\nconst Message = ({ message }) => {\n    if (!message) {\n        return null\n    }\n\n    console.log(message.type)\n\n    const succesfull = {color:'green', fontSize:20}\n    const unsuccesfull = {color:'red', fontSize:20}\n    const messageStyle = message.type === 'error' ? unsuccesfull : succesfull\n\n    return (\n        <div style={messageStyle}>\n            <p> {message.message} </p>\n        </div>\n    )\n}\n\nexport default Message","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst post = async content => {\n  const config = { headers: { Authorization: token } }\n  const response = await axios.post(baseUrl, content, config)\n  return response.data\n}\n\nexport default { setToken, getAll, post }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport Message from './components/Message'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n  const [message, setMessage] = useState(null)\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs(blogs)\n    )\n  }, [])\n\n  useEffect(() => {\n    const loggedUser = window.localStorage.getItem('loggedUser')\n    if (loggedUser) {\n      const user = JSON.parse(loggedUser)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const handleLogout = () => {\n    setUser(null)\n    window.localStorage.removeItem('loggedUser')\n  }\n\n  const messageWith = (message, type = 'success') => {\n    setMessage({ message, type })\n    setTimeout(() => {\n      setMessage(null)\n    }, 4000)\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({ username, password })\n      window.localStorage.setItem('loggedUser', JSON.stringify(user))\n      setUser(user)\n      setUsername('')\n      setPassword('')\n      blogService.setToken(user.token)\n    } catch (exception) {\n      messageWith('wrong username or password', 'error')\n    }\n  }\n\n  const handleBlog = async (event) => {\n    event.preventDefault()\n    const blogObject = {\n      title: title,\n      author: author,\n      url: url\n    }\n\n    try {\n      await blogService.post(blogObject)\n      setBlogs(blogs.concat(blogObject))\n      messageWith(`${title} added succesfully`)\n    } catch (exception) {\n      messageWith('required information missing', 'error')\n    }\n  }\n\n  const loginForm = () => (\n    <form onSubmit={handleLogin}>\n      <div>\n        <h2>log in to application</h2>\n        <div> username <input name=\"username\" type=\"text\" value={username}\n          onChange={({ target }) => setUsername(target.value)} />\n        </div>\n        <div> password <input name=\"password\" type=\"password\" value={password}\n          onChange={({ target }) => setPassword(target.value)} />\n        </div>\n        <button type=\"submit\"> login </button>\n      </div>\n    </form>\n  )\n\n  const blogForm = () => (\n    <form onSubmit={handleBlog}>\n      <div>\n        <h2>create new</h2>\n        <div> title: <input name=\"title\" type=\"text\" value={title}\n          onChange={({ target }) => setTitle(target.value)} />\n        </div>\n        <div> author: <input name=\"author\" type=\"text\" value={author}\n          onChange={({ target }) => setAuthor(target.value)} />\n        </div>\n        <div> url: <input name=\"url\" type=\"text\" value={url}\n          onChange={({ target }) => setUrl(target.value)} />\n        </div>\n        <button type=\"submit\"> create </button>\n      </div>\n    </form>\n  )\n\n  const showBlogs = () => (\n    <div>\n      <h2>blogs</h2>\n      <p>{user.name} logged in <button onClick={handleLogout}> logout </button> </p>\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} />\n      )}\n    </div>\n  )\n\n  return (\n    <div>\n      <Message message={message}/>\n      {user === null ? loginForm() : showBlogs()}\n      {user !== null && blogForm()}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}